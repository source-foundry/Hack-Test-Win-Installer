# Appveyor build script
# List of installed tools/SDKs etc.: https://www.appveyor.com/docs/installed-software
# Add-AppveyorMessage "This is a test message"
#  - appveyor AddMessage "Test message 123"
# Set-AppveyorBuildVariable 'MyVar1' 'This is a test message'
#  - appveyor SetVariable -Name <string> -Value <string>

version: 1.2.{build}

# Do not run when just a tag is pushed (which we do automatically by adding a release)
skip_tags: true

branches:
  except:
    - gh-pages

environment:
  WORK_PATH: .
  INNOSETUP_DOWNLOAD_URL: https://github.com/source-foundry/fscw/releases/download/v0.0.1/innosetup.exe
  VIRUS_TOTAL_API_KEY:
    secure: EwkMKJe3x5/3codga0EyEEhoqzSsqvtDQwQbrGoXTY/S8ZcHCOaLYpHYTmMYKjWEudUwDBER0RsltoJjwb7yU7cBHjRdS1ClNSlDyCx7Gfw=
  PYTHON_PATH: C:\Python36-x64\
  # Not used right now
  #TEST_FONTS_BASE_URL: https://github.com/chrissimpkins/Hack/raw/master/build/test_builds

  
install:
  # Our goal is to have these test fonts side-by-side installed with the release Hack fonts
  # During development, the Hack fonts are not called other then "Hack" so this would not allow a side-by-side installation
  # To solve this, new test fonts are pused to the "\fonts" folder and we rename them (family and file) to "Test"
  
  # Delete any old testfonts
  - cd %APPVEYOR_BUILD_FOLDER%\testfonts\
  - del *.* /Q   
  
  # Copy the fonts from \fonts here and rename them to "Test"
  - copy "%APPVEYOR_BUILD_FOLDER%\fonts\Hack-Bold.ttf" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Bold.ttf"
  - copy "%APPVEYOR_BUILD_FOLDER%\fonts\Hack-BoldItalic.ttf" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-BoldItalic.ttf"
  - copy "%APPVEYOR_BUILD_FOLDER%\fonts\Hack-Italic.ttf" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Italic.ttf"
  - copy "%APPVEYOR_BUILD_FOLDER%\fonts\Hack-Regular.ttf" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Regular.ttf"
    
  # The script requires fonttools
  - C:\Python36-x64\scripts\pip install fonttools
  
  # Use fontname.py to rename the font family to "Hack Test"
  - C:\Python36-x64\python "%APPVEYOR_BUILD_FOLDER%\scripts\fontname.py" "HackTest" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Bold.ttf" 
  - C:\Python36-x64\python "%APPVEYOR_BUILD_FOLDER%\scripts\fontname.py" "HackTest" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-BoldItalic.ttf" 
  - C:\Python36-x64\python "%APPVEYOR_BUILD_FOLDER%\scripts\fontname.py" "HackTest" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Italic.ttf"
  - C:\Python36-x64\python "%APPVEYOR_BUILD_FOLDER%\scripts\fontname.py" "HackTest" "%APPVEYOR_BUILD_FOLDER%\testfonts\Hack-Test-Regular.ttf"
    
  
  # We  use CURL from Chocolatey for some actions. However, curl.exe does not trust 
  # any CA, hence each SSL download would fail. But there is a PEM archive of all 
  # root CA allowed by Firefox: https://curl.haxx.se/docs/caextract.html
  #
  # We will use PowerShell (which is using the Root CAs in Windows) to download 
  # this CACert.pem file and then instruct CURL to use it.
  #
  # I hope this is proper way to ensure that our https connections are really secure  

  - md C:\temp      	
  # Download CA pem file using PowerShell
  - ps: (new-object net.webclient).DownloadFile('https://curl.haxx.se/ca/cacert.pem', 'c:\temp\cacert.pem')  
  # Install CURL using Chocolatey (https://chocolatey.org/packages/curl)
  - choco install -y curl       
  
  # Download newest version of the font files - Not used right now because big master (Chris) pushes directly to this repo
  # CURL Options: use our PEM file, follow redirect and use the remote name as the local filename
  #- curl.exe --cacert C:\temp\cacert.pem --location --remote-name %TEST_FONTS_BASE_URL%/Hack-Regular-DEV.ttf
  #- curl.exe --cacert C:\temp\cacert.pem --location --remote-name %TEST_FONTS_BASE_URL%/Hack-Italic-DEV.ttf
  #- curl.exe --cacert C:\temp\cacert.pem --location --remote-name %TEST_FONTS_BASE_URL%/Hack-Bold-DEV.ttf
  #- curl.exe --cacert C:\temp\cacert.pem --location --remote-name %TEST_FONTS_BASE_URL%/Hack-BoldItalic-DEV.ttf   
  #- dir 
    
  # Download and install Inno Setup. 
  - ps: $env:INNOSETUP_DOWNLOAD_URL
  - ps: (new-object net.webclient).DownloadFile($env:INNOSETUP_DOWNLOAD_URL, 'c:\temp\innosetup.exe')
  - c:\temp\innosetup.exe TYPE=full /VERYSILENT /SUPPRESSMSGBOXES /NORESTART /CLOSEAPPLICATIONS /NORESTARTAPPLICATIONS
  # Add Inno Setup to PATH so the ISCC command is found
  - set PATH="C:\Program Files (x86)\Inno Setup 5";%PATH%
    

build_script:
  # Compile with InnoSetup 
  - iscc.exe /DEXTERNAL_VERSION=%APPVEYOR_BUILD_VERSION% %APPVEYOR_BUILD_FOLDER%\src\HackTestWindowsInstaller.iss
  # Upload the exe to VirusTotal with CURL
  - curl.exe --cacert C:\temp\cacert.pem --verbose --form file=@%APPVEYOR_BUILD_FOLDER%\out\HackTestFontInstaller.exe --form apikey=%VIRUS_TOTAL_API_KEY% https://www.virustotal.com/vtapi/v2/file/scan
  
  
artifacts:
  - path: 'out\*.exe'
    name: SetupExe
  
 
deploy:
  provider: GitHub
  auth_token:
    secure: JYo6W23N4HyYjKTXyHQehE6t3H61fUMidx59lXKr7984cRiqMOgc0GJOoxwa/3Jd
  artifact: SetupExe
  prerelease: true
  tag: v$(appveyor_build_version)
  release: Version $(appveyor_build_version)
  description: $(APPVEYOR_REPO_COMMIT_MESSAGE) 
  #Build on $(APPVEYOR_REPO_COMMIT_TIMESTAMP):\n 

  
#notifications:
#  - provider: Slack
#    auth_token:
#      secure: ElggvPLQdlcU9+djZsLDZpZLjOOpYg5Y2DRFQGN2yuSrZqoOP/1PCAmUSd8RJjrukymK1FQNrKuSpiw0hLHEeg==
#    channel: '#release-info'
  
#done